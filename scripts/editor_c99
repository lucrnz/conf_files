#!/bin/bash
CC=$(which gcc)
CFLAGS="-O2 -march=native -mtune=native -s"
CSTD="-std=c99 -pedantic -Werror"
leave=0
ucode=$(gen_ucode)
tmp_file_source="/tmp/${ucode}.c"
tmp_file_bin="/tmp/${ucode}.bin"


echo 'include <stdlib.h>' >> $tmp_file_source
echo 'include <stdint.h>' >> $tmp_file_source
echo 'include <string.h>' >> $tmp_file_source
echo >> $tmp_file_source
echo 'int main(int argc, char** argv) {'>> $tmp_file_source
echo "\t" >> $tmp_file_source
echo '}'>> $tmp_file_source


while [ "$leave" == "0" ]; do
	$EDITOR $tmp_file_source
	$CC $CSTD $CFLAGS $tmp_file_source -o $tmp_file_bin && $tmp_file_bin
	echo "Program returned code $?"
	echo "	1) Edit source ; recompile & run"
	echo "	2) Copy source to clipboard & leave"
	echo "	3) Just leave"
	read o
	if [ "$o" == "1" ]; then
		leave=0
	elif [ "$o" == "2" ]; then
		cat $tmp_file_source | xsel -b
		leave=1
	elif [ "$o" == "3" ]; then
		leave=1
	fi
done

rm -fv $tmp_file_source
rm -fv $tmp_file_bin
