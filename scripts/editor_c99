#!/usr/bin/env bash
CC=$(which gcc)
CFLAGS="-O2 -s -pipe -fno-plt -mtune=generic -fsanitize=address,leak"
CSTD="-std=c99 -pedantic"
leave=0
ucode=$(gen_ucode)
tmp_file_source="/tmp/${ucode}.c"
tmp_file_bin="/tmp/${ucode}.bin"

echo '#include <stdio.h>' >> $tmp_file_source
echo '#include <stdlib.h>' >> $tmp_file_source
echo '#include <stdint.h>' >> $tmp_file_source
echo '#include <stdbool.h>' >> $tmp_file_source
echo '#include <string.h>' >> $tmp_file_source
echo 'int main(int argc, char **argv) {'>> $tmp_file_source
echo -e '\t' >> $tmp_file_source
echo -e '\treturn 0;' >> $tmp_file_source
echo '}'>> $tmp_file_source

while [ "$leave" == "0" ]; do
	$EDITOR $tmp_file_source
	cat $HOME/.conf_files/clang-format | clang-format -i --style=file $tmp_file_source
	$CC $CSTD $CFLAGS $tmp_file_source -o $tmp_file_bin && $tmp_file_bin
	echo "\nProgram returned code $?"
	echo "	1) Edit source ; recompile & run"
	echo "	2) Copy source to clipboard & leave"
	echo "	3) Just leave"
	read o
	if [ "$o" == "1" ]; then
		leave=0
	elif [ "$o" == "2" ]; then
		cat $tmp_file_source | xsel -b
		leave=1
	elif [ "$o" == "3" ]; then
		leave=1
	fi
done

rm -fv $tmp_file_source
rm -fv $tmp_file_bin
